datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String             @id @default(uuid())
  name             String
  email            String             @unique
  password         String
  role             Role               @default(USER)
  reports          Report[]
  points           Int                @default(0)
  createdAt        DateTime           @default(now())
  Redemption       Redemption[]
  TrashTransaction TrashTransaction[]
}

model Report {
  id          String    @id @default(uuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  description String
  imageUrl    String
  status      String    @default("PENDING") // pending | verified | rejected
  verifiedAt  DateTime? // waktu diverifikasi
  createdAt   DateTime  @default(now())
}

model Reward {
  id          String       @id @default(uuid())
  title       String
  description String
  pointsCost  Int // <- tambahkan ini!
  imageUrl    String
  createdAt   DateTime     @default(now())
  redemptions Redemption[]
}

model Redemption {
  id        String   @id @default(uuid())
  userId    String
  rewardId  String
  user      User     @relation(fields: [userId], references: [id])
  reward    Reward   @relation(fields: [rewardId], references: [id])
  createdAt DateTime @default(now())
}

model TrashTransaction {
  id         String        @id @default(uuid())
  user       User          @relation(fields: [userId], references: [id])
  userId     String
  category   TrashCategory @relation(fields: [categoryId], references: [id])
  categoryId String
  weight     Float
  imageUrl   String?
  status     String        @default("PENDING")
  value      Int?
  createdAt  DateTime      @default(now())
  verifiedAt DateTime?
}

model TrashCategory {
  id               String             @id @default(uuid())
  name             String             @unique
  iconUrl          String? // bisa digunakan untuk menampilkan ikon
  createdAt        DateTime           @default(now())
  TrashTransaction TrashTransaction[]
}

enum Role {
  ADMIN
  USER
}

enum ReportStatus {
  PENDING
  VERIFIED
  REJECTED
}

model Detection {
  id        String   @id @default(uuid())
  userId    String
  category  String
  imageUrl  String
  createdAt DateTime @default(now())
}

model Transaction {
  id        String   @id @default(uuid())
  userId    String
  category  String
  weightKg  Float
  points    Int
  createdAt DateTime @default(now())
}

model Location {
  id        String @id @default(uuid())
  name      String
  address   String
  contact   String
  openHours String
}

model PickupRequest {
  id         String   @id @default(uuid())
  userId     String
  locationId Int
  pickupTime DateTime
  status     String
}
